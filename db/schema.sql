-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.classical_compositions
(
    track_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    author character varying(100) COLLATE pg_catalog."default",
    disc_id uuid,
    epoch character varying(50) COLLATE pg_catalog."default" NOT NULL,
    duration time without time zone NOT NULL
);

CREATE TABLE IF NOT EXISTS public.discs
(
    "disс_id" uuid NOT NULL DEFAULT uuid_generate_v4(),
    total_duration time without time zone,
    CONSTRAINT disk_pkey PRIMARY KEY ("disс_id"),
    CONSTRAINT disk_disk_id_disk_id1_key UNIQUE ("disс_id")
        INCLUDE("disс_id")
);

CREATE TABLE IF NOT EXISTS public.pop_compositions
(
    track_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    author character varying(100) COLLATE pg_catalog."default",
    disc_id uuid,
    genre character varying(100) COLLATE pg_catalog."default" NOT NULL,
    popularity integer,
    duration time without time zone NOT NULL
);

CREATE TABLE IF NOT EXISTS public.rock_compositions
(
    track_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    author character varying(100) COLLATE pg_catalog."default",
    disc_id uuid,
    style character varying(100) COLLATE pg_catalog."default" NOT NULL,
    duration time without time zone NOT NULL
);

CREATE TABLE IF NOT EXISTS public.tracks
(
    track_id uuid NOT NULL DEFAULT uuid_generate_v4(),
    title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    author character varying(100) COLLATE pg_catalog."default",
    disc_id uuid,
    duration time without time zone NOT NULL,
    CONSTRAINT tracks_pkey PRIMARY KEY (track_id),
    CONSTRAINT tracks_track_id_track_id1_key UNIQUE (track_id)
        INCLUDE(track_id)
);

ALTER TABLE IF EXISTS public.tracks
    ADD CONSTRAINT tracks_disc_id_fkey FOREIGN KEY (disc_id)
    REFERENCES public.discs ("disс_id") MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE
    DEFERRABLE
    NOT VALID;

END;